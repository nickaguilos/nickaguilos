/* 


	New grid framework based on CSS Grid  
	Started July 3, 2019 

	Premise of this css grid utility is to create a grid framework that would supplant the current float based grid framework in use since 2013.

	This grid framework should be as lightweight as possible and should cover all layout formats, current and future, full width and static width, desktop and mobile.

	- AutoDeal Interface Design Team


*/

.container {
	@media screen and (min-width: 700px) {
		min-width: 1080px;
	}
}

.container, .inner-grid {
	display: grid;
	grid-template-columns: repeat(12, 1fr);

	// For Mobile Stacked Layouts
	&.layout-1 {
		grid-auto-flow: row;
		// grid-template-columns: 1fr;

		#site-header, #site-footer, main {
			grid-column-start: 1;
			grid-column-end: 13;
			max-width: 100vw;
		}
	}
	
	.width-limiter {
		width: $large;
		margin: 0 auto;
	}

	// For Desktop Fixed Width Layouts
	&.layout-2 {
		grid-column-gap: 2em;
		max-width: $large;
		margin: 0 auto;

		.inner-grid {
			grid-gap: 2em;
		}


		#site-content {
			grid-column: 3 / span 9;

			.author {
				display: grid;
				grid-template-columns: 150px 1fr;
			}
		}

		#side-bar {
			grid-column: 1 / span 3;
		}
	}

	// For Desktop Full Width, Fluid Layouts
	&.layout-3 {
		.width-limiter {
			width: $large;
			margin: 0 auto;
		}

		#site-header{
			grid-column: 1 / span 12;
		}

		#side-bar {
			grid-area: sidebar;
		}

		#site-content {
			grid-area: sitecontent;
		}

		main {
			grid-template-columns: 300px minmax(0, 1fr);
		    grid-template-areas: "sidebar sitecontent"
		}
	}
}